###################################################################################################
# srs_demo.config
#
# danc@iobjects.com 01/20/2000
#
###################################################################################################
#
# How setup a new build process
#
# First, you need to do some outside work for this thing to go. Specifically, you need to have a
# kernel configuration in the builds/ folder in your eCos kernel tree; you need to have a bootloader
# that you want to use for this image; you need to have a config file that you want to build the
# player with. Optionally you can use the default config file; the location of the kernel sources
# will automagically be set by this script, so you dont have to worry about it.
#
# Second, make a copy of the default.config script, and rename it to something that pertains
# to what you are building. For example, if you are building images for the iomega 16 bit player,
# then "iomega-16bit.config" might be a decent name.
#
# Third, adjust the important variables in the new config. Specifically, be ABSOLUTELY SURE to
# modify the BUILD_NAME to match your new build name. per the above example, "iomega-16bit"
# would be a good BUILD_NAME.
# The other variables should be self evident. If you're scared of the config, then adjust the
# ech= line so you can get a dump of what all it is going to do (this gets dumped to a log file).
#
# Try and respect the structure set up in this file. Do note that build options for the player
# work but build options for the ecos kernel do not; for the most part your build options should
# reside in the respective config files. Read the comments, too :)
#
###################################################################################################

##############################################
# variables: modify these for a new build type
##############################################

# a unique name for this build - this is important, since it is used
# for the count file, the lock file, and the log file
# the build name doesn't relate to any of the directory names, rather it should
# relate to the customer for the build
BUILD_NAME="iomega16"

# uncomment the following line to (hypothetically) get a dump of what the script would do
#ech=echo
ech=


##### eCos build configuration

# the name of the ecos sources in VSS
ECOS_PROJECT_NAME="$VSS_ROOT_DIR/ecos/iomega-16bit"

# the location on this machine where we check them out to
ECOS_PROJECT_DIR="$LOCAL_ROOT_DIR/ecos/iomega-16bit"

# the name of the configuration we should use
# this file is found in $ECOS_PROJECT_DIR/builds/
ECOS_CONFIG_NAME="iomega-rom16.ecc"

# the directory we should build in
# a build and install directory will be created underneath this
ECOS_BUILD_DIR="$LOCAL_ROOT_DIR/ecos-builds/iomega16/iomega16-rom"

# any extra flags eCos should be built with (NOT WORKING)
ECOS_BUILD_FLAGS=

# should we use the old eCos config tool (for hipzip, fullaudio, and other 7212 oldskool images)
USE_OLD_CONFIGTOOL=1


##### player build configuration

# the name of the player sources in VSS
PLAYER_PROJECT_NAME="$VSS_ROOT_DIR/player/iomega-16bit"

# the location on this machine where we check them out to
PLAYER_PROJECT_DIR="$LOCAL_ROOT_DIR/player/iomega-16bit"

# the name of the config file we should use
PLAYER_CONFIG_NAME="config"

# any extra flags the player should be built with
PLAYER_BUILD_FLAGS=


##### final image build configuration

PAD_FOR_BOOTLOADER=1

# set this to 1 if you want to build a .dad without a bootloader
BUILD_DAD_IMAGE=1
# set this to 1 if you want to build a .dad with a bootloader. both can be enabled
BUILD_DAD_BOOTLOAD_IMAGE=0

## if both of the above values are 0, you can ignore the BOOTLOADER_* and IMAGE_* options

# the name of the bootloader file
# this should be in $PLAYER_PROJECT_DIR/make-image/bootloaders/
BOOTLOADER_NAME="iomega16_bootloader.bin"

# filename that has the current bootloader version number in it
# this should also be in make-image/bootloaders
BOOTLOADER_VERSION_FN="bversion_iomega16"

# filename that has the current version number of the image in it
IMAGE_VERSION_FN="version"

# do we update VSS with our version numbers?
UPDATE_VSS_VERSION=1

# keys to use when encoding the non-bootloader image
IMAGE_PUBLICKEY="publickey_iomega16"
IMAGE_PRIVATEKEY="privatekey_iomega16"

# arguments to use when encoding the non-bootloader image
IMAGE_ENCODE_ARGS=

# keys to use when encoding the bootloader image
BOOTLOADER_PUBLICKEY="publickey_iomega16"
BOOTLOADER_PRIVATEKEY="privatekey_iomega16"

# arguments to use when encoding the bootloader image
BOOTLOADER_ENECODE_ARGS=

# the names of codecs to be built into the image. in general you shouldn't have
# to change this list at all. these are all in make-image/pad/
CODEC_LOCATION=596
CODEC_LIST="alllibs04_10_01.axf"


##############################################
# end of variables
##############################################



